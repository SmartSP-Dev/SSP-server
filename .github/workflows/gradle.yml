name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}
      KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
      DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
      DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Build with Gradle (skip tests)
        run: ./gradlew clean build -x test

      - name: Upload build artifact
        uses: actions/checkout@v4
        with:
          name: app-jar
          path: build/libs/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}
      KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
      DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
      DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: build/libs

      - name: Copy artifact to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "build/libs/*.jar"
          target: "/home/${{ secrets.EC2_USER }}/app.jar"

      - name: Restart application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            #!/bin/bash
            echo "Stopping existing application..."
            pkill -f 'java -jar' || true
            sleep 5
            echo "Starting new application..."
            nohup java -jar /home/${{ secrets.EC2_USER }}/app.jar > /home/${{ secrets.EC2_USER }}/app.log 2>&1 &
            echo "Deployment complete."